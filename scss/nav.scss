/***************************
**  Styles for macro nav()
**
**    CSS Variables:




****************************/

@import '_scss-variables.scss';


// side markers (e.g. mobile nav):
$side-marker-width:       var(--pfy-nav-side-marker-width, 3px);

// arrow:
$nav-arrow-size:          1.3em;
$nav-arrow-left:          1.3em;
$nav-arrow-hover-color:   gray;


// mobile nav:
$mobile-nav-text-size:    var(--pfy-mobile-nav-txt-size, 5vw);


// pfy-nav-horizontal:
$nav-horizontal-col-gap:  10px;
$nav-horizontal-padding:  0.5em;

// pfy-nav-accordion:
$nav-animation-duration:  0.3s;

// pfy-nav-indented-no-arrow:
$nav-first-indent:        1.2em;
$nav-indent-step:         1.2em;

//=== in-page nav:
$in-page-first-indent:    0em;
$in-page-indent-step:     1em;

// === Colors ======================================

// Base color: "hue, saturation", e.g. "10, 80%":
$base-col1: var(--nav-base-color1); // --nav-base-color1: 0, 0%;
$base-col2: var(--nav-base-color2); // --nav-base-color2: 0, 0%;

// Text:
$nav-txt-size:        var(--pfy-nav-txt-size, 12pt);
$txt-color:           var(--pfy-nav-txt-color, currentColor);
$sub-txt-color:       var(--pfy-nav-sub-txt-color, $txt-color);
$active-txt-color:    var(--pfy-nav-active-txt-color, $txt-color);
$curr-txt-color:      var(--pfy-nav-curr-txt-color, $txt-color);
$surrogate-txt-color: var(--pfy-nav-surrogate-txt-color, $txt-color);
$hover-txt-color:     var(--pfy-nav-hover-txt-color, $txt-color);

// Background and border-left:
$nav-bg-color:        var(--pfy-nav-bg-color, white);
$elem-bg-color:       var(--pfy-nav-elem-bg-color, $nav-bg-color);
$hover-bg-color:      var(--pfy-nav-hover-bg-color, $elem-bg-color);
$sub-bg-color:        var(--pfy-nav-sub-bg-color, $elem-bg-color);
$active-bg-color:     var(--pfy-nav-active-bg-color, $elem-bg-color);
$curr-bg-color:       var(--pfy-nav-curr-bg-color, $elem-bg-color);
$surrogate-bg-color:  var(--pfy-nav-surrogate-bg-color, $sub-bg-color);

// focus:
$focus-frame-color1: var(--pfy-focus-frame-color1, #{$focus-frame-color1});
$focus-frame-color2: var(--pfy-focus-frame-color2, #{$focus-frame-color2});


// Layout:
$nav-elem-height:     2em;
$nav-line-height:     1.2em;	// -> space between wrapped lines
$nav-sub-width:       10em;

$elem-height:         var(--pfy-nav-elem-height, 2em);
$line-height:         var(--pfy-nav-line-height, $nav-line-height);
$sub-width:           var(--pfy-nav-top-sub-width, #{$nav-sub-width});
$horizontal-padding:  var(--pfy-nav-horizontal-padding, #{$nav-horizontal-padding});
$animation-duration:  var(--pfy-nav-animation-duration, #{$nav-animation-duration});



// === Computed indentation values ==================================
$indent1: var(--pfy-nav-horizontal-first-indent, #{$nav-first-indent});
$indent2: calc(var(--pfy-nav-horizontal-first-indent, #{$nav-first-indent}) + var(--pfy-nav-horizontal-indent-step, #{$nav-indent-step}));
$indent3: calc(var(--pfy-nav-horizontal-first-indent, #{$nav-first-indent}) + 2 * var(--pfy-nav-horizontal-indent-step, #{$nav-indent-step}));
$indent4: calc(var(--pfy-nav-horizontal-first-indent, #{$nav-first-indent}) + 3 * var(--pfy-nav-horizontal-indent-step, #{$nav-indent-step}));
$indent5: calc(var(--pfy-nav-horizontal-first-indent, #{$nav-first-indent}) + 4 * var(--pfy-nav-horizontal-indent-step, #{$nav-indent-step}));
$indent6: calc(var(--pfy-nav-horizontal-first-indent, #{$nav-first-indent}) + 5 * var(--pfy-nav-horizontal-indent-step, #{$nav-indent-step}));



// === Generic Nav ===================

// === flicker - all screen sizes =================================
#pfy.pfy-default-styling .pfy-nav-wrapper,
.pfy-default-styling .pfy-nav-wrapper {
  position: relative;

  //--pfy-nav-bg-color: var(--pfy-page-bg-color);

  // nav placeholder to avoid flicker:
  .pfy-top-nav-placeholder {
    line-height: $line-height;
    height: calc(#{$line-height} + #{$elem-height} - 1.2em);
    margin: 0;
  }

  .pfy-nav-empty,
  &.pfy-nav-empty {
    display: none;
  }
} // .pfy-nav-wrapper




// === large screen =======================================================
#pfy.pfy-default-styling .pfy-encapsulated.pfy-large-screen,
.pfy-default-styling.pfy-large-screen {

  // nav not .pfy-nav-colored -> apply CSS-variables:
  .pfy-nav {
    background: var(--pfy-nav-bg-color, transparent);

    a {
      color: $txt-color;
      background: $elem-bg-color;
      padding-right: 0.5em;
    }


    .pfy-lvl-2 a {
      color: $sub-txt-color;
      background: $sub-bg-color;
    }

    // pfy-active:
    .pfy-lvl-1.pfy-active {
      > a {
        color:      $active-txt-color;
        background: $active-bg-color;
      }
    }
    // pfy-curr:
    .pfy-curr.pfy-curr {
      > a {
        color:      $curr-txt-color;
        background: $curr-bg-color;
      }
    }
    &.pfy-nav a:hover {
      color:      $hover-txt-color;
      background: $hover-bg-color;
    }


    // pfy-surrogate-elem:
    .pfy-surrogate-elem {
      > a {
        color:      $surrogate-txt-color;
        background: $surrogate-bg-color;
        cursor: s-resize;
      }
      &.pfy-open > a .pfy-nav-arrow,
      &.pfy-open > a {
        cursor: n-resize;
      }
    }
  } // .pfy-nav

  // nav placeholder:
  .pfy-top-nav-placeholder {
    color: transparent;
  }
  &.debug .pfy-top-nav-placeholder {
    outline: 1px solid gray;
    outline-offset: -1px;
    padding: 0 0.5em;
    color: #077 !important;
    background: #eff;
  }

  .pfy-sitemap {
    &.pfy-sitemap-horizontal {
      nav > ol {
        display: flex;
        justify-content: space-between;
        //gap: 10px;
        li {
          flex: 1 1 auto;
        }
        > li {
          background: var(--pfy-nav-elem-bg-color);
        }
      }
    }
  }

} // pfy-large-screen



#pfy.pfy-default-styling .pfy-encapsulated,
.pfy-default-styling {

  // === generic ===================================
  .pfy-nav,
  &.pfy-nav {

    // focus:
    :focus-visible {
      box-shadow:
        0 0 0 1px white,
        0 0 0 2px $focus-frame-color2,
        inset 0 0 0 1px $focus-frame-color1,
        inset 0 0 0 2px white,
        inset 0 0 0 3px $focus-frame-color2;
    }
    :focus, a, a:visited, a:hover {
      border-bottom: none;
    }

    ul, ol, li {
      padding: 0;
      margin: 0;
    }
    ul, ol, li, a {
      display: block;
    }
    li {
      vertical-align: top;
      position: relative;
    }

    // gap bug fix:
    ul, ol, li {
      font-size: 0;
    }
    a,
    div {
      font-size: $nav-txt-size;
    }

    // A element:
    a {
      position:         relative;
      overflow:         hidden;
      text-overflow:    ellipsis;
      font-size:        var(--pfy-nav-txt-size,  $nav-txt-size);
      line-height:      var(--pfy-nav-line-height, $nav-line-height);
      padding-top:      calc( (var(--pfy-nav-elem-height, #{$nav-elem-height}) - 1.2em) / 2);
      padding-bottom:   calc( (var(--pfy-nav-elem-height, #{$nav-elem-height}) - 1.2em) / 2);
      user-select:      none;
    }

    .pfy-nav-label {
      display: inline-block;
    }
    .pfy-nav-arrow {
      display: none;
      position: absolute;
      top: calc((#{$elem-height} - 1.2em) / 2 - 0.1em);
      user-select: none;
      width: $nav-arrow-size;
      height: var(--pfy-nav-line-height, 1.2em);
      border-radius: 50%;
      svg {
          width: $nav-arrow-size;
          height: var(--pfy-nav-line-height, 1.2em);
        }
      border: 1px solid transparent;
    }

    // circle around hovered arrow:
    .pfy-nav-arrow:hover {
        border: 1px solid var(--nav-arrow-hover-color, $nav-arrow-hover-color);
    }

    // make frozen state visible:
    .pfy-branch-frozen .pfy-nav-arrow {
      transform: scale(1.3);
    }

    li.pfy-has-children > div {
        overflow: hidden;
    }

  } // generic .pfy-nav


  // hide surrogate elements wherever not collapsing:
  .pfy-nav-horizontal .pfy-nav .pfy-lvl-2,    // top nav, below lvl-1
  .pfy-nav-wrapper:not(.pfy-nav-collapsible),
  .pfy-nav-plain {
    .pfy-surrogate-elem {
      display: none!important;
    } // .pfy-surrogate-elem
  }



  // === collapsed / collapsible ========================
  &.pfy-nav-collapsed, .pfy-nav-collapsed,
  &.pfy-nav-collapsible, .pfy-nav-collapsible {
      .pfy-nav-arrow {
          display: block;
      }

      // avoid flicker during slow loading:
      &.pfy-nav-horizontal li.pfy-lvl-1.pfy-has-children > div > ol {
          margin-top: -10000px;
      }
  } // pfy-nav-collapsed / collapsible


  // === collapsible open ===============================
  li.pfy-has-children.pfy-open > div > ol {
    margin-top: 0 !important;
  } // pfy-open




  // === indented ===================================
  .pfy-nav-indented { // no-arrow indentation:
      .pfy-lvl-1 > a {
        padding-left: $indent1;
      }
      .pfy-lvl-2 > a {
        padding-left: $indent2;
      }
      .pfy-lvl-3 > a {
        padding-left: $indent3;
      }
      .pfy-lvl-4 > a {
        padding-left: $indent4;
      }
      .pfy-lvl-5 > a {
        padding-left: $indent5;
      }
      .pfy-lvl-6 > a {
        padding-left: $indent6;
      }
  } // indentation



  // === animated ===================================
  .pfy-nav-animated,
  .pfy-nav-animate {
      li.pfy-has-children > div > ol {
          transition: margin-top $animation-duration;
      }
      .pfy-nav-arrow svg {
          transition: transform $animation-duration;
      }
  } // pfy-nav-animated



  // === Default: Vertical =========================:
  .pfy-nav-wrapper:not(.pfy-nav-horizontal) {
    .pfy-hover,
    .pfy-open {
      > a > span.pfy-nav-arrow svg {
        transform: rotate(90deg);
      }
    }
    a:visited,
    a {
      position: relative;
      border-left: 3px solid transparent;
      .pfy-nav-label {
        display: block;
        hyphens: auto;
        text-overflow: ellipsis;
        overflow-x: hidden;
        width: 100%;
      }
    }

    // remove extra space below:
    .pfy-lvl-1 li:first-child a {
      padding-top: 0;
    }

    .pfy-lvl-1 > a {
      padding-left: $indent1;
      .pfy-nav-arrow {
        left: calc(#{$indent1} - #{$nav-arrow-left} );
      }
    }
    .pfy-lvl-2 > a {
      padding-left: $indent2;
      .pfy-nav-arrow {
        left: calc(#{$indent2} - #{$nav-arrow-left} );
      }
    }
    .pfy-lvl-3 > a {
      padding-left: $indent3;
      .pfy-nav-arrow {
        left: calc(#{$indent3} - #{$nav-arrow-left} );
      }
    }
    .pfy-lvl-4 > a {
      padding-left: $indent4;
      .pfy-nav-arrow {
        left: calc(#{$indent4} - #{$nav-arrow-left} );
      }
    }
    .pfy-lvl-5 > a {
      padding-left: $indent5;
      .pfy-nav-arrow {
        left: calc(#{$indent5} - #{$nav-arrow-left} );
      }
    }
    .pfy-lvl-6 > a {
      padding-left: $indent6;
      .pfy-nav-arrow {
        left: calc(#{$indent6} - #{$nav-arrow-left} );
      }
    }

    .pfy-nav {
      // all:
      li a {
        border-left: $side-marker-width solid var(--nav-side-marker-color, transparent);
      }

      // active top:
      .pfy-lvl-1.pfy-active > a {
        border-left: $side-marker-width solid var(--nav-side-marker-active-color, transparent);
      }

      // curr:
      .pfy-curr.pfy-curr > a {
        border-left: $side-marker-width solid var(--nav-side-marker-curr-color, transparent);
      }

      // hover:
      &.pfy-nav a:hover {
        border-left: $side-marker-width solid var(--nav-side-marker-hover-color, transparent);
      }
    }
  } // vertical nav



  // === Top Nav
  .pfy-nav-horizontal,
  &.pfy-nav-horizontal {

      a {
          padding-right: $horizontal-padding;
      }

      ol {
          margin: 0;
          padding: 0;
      }

      > ol {
          font-size: 0;
      }

      li {
          vertical-align: top;
          position: relative;
          margin: 0;
      }

    .pfy-lvl-1:not(:last-child) {
      margin-right: var(--pfy-nav-horizontal-col-gap, #{$nav-horizontal-col-gap});
    }

      .pfy-lvl-1 {
          display: inline-block;
          margin: 0 2em 0 0;

          > a {
              display: inline-block;
              .pfy-nav-arrow {
                  display: inline-block;
                  svg {
                      transform: rotate(90deg);
                  }
              }
          }


          &.pfy-has-children {
              > a {
                  .pfy-nav-label {
                      margin-right: calc(#{$nav-arrow-size} - 0.5em);
                  }
                  .pfy-nav-arrow {
                      right: 0;
                      top: calc((#{$elem-height} - 1.2em) / 2);
                  }
              }
              > div {
                  position: absolute;
                  top: 100%; // push below top level elem
                  left: 0;
                  width: $sub-width;
                  z-index: 102;
                  overflow: hidden;
              }
          }
      }

      &.pfy-nav-indented {
        // level 1 r&l padding:
          .pfy-lvl-1 > a {
              padding-left: $horizontal-padding;
          }
          // below level 1 -> no arrow:
          .pfy-lvl-2 .pfy-nav-arrow {
              display: none;
          }

          .pfy-lvl-2 > a {
              padding-left: $indent1;
          }

          .pfy-lvl-3 > a {
              padding-left: $indent2;
          }

          .pfy-lvl-4 > a {
              padding-left: $indent3;
          }

          .pfy-lvl-5 > a {
              padding-left: $indent4;
          }

          .pfy-lvl-6 > a {
              padding-left: $indent5;
          }
      }
  } // pfy-nav-horizontal



  // === mobile nav ======================================
  &.pfy-nav-mobile-open {
    .pfy-primary-nav {
      font-size: $mobile-nav-text-size;
    }
  } // .pfy-nav-mobile-open




  // === small screen ======================================
  &.pfy-small-screen {
    // nav placeholder:
    .pfy-top-nav-placeholder {
      display: none;
    }
  }
} // pfy-encapsulated



// === typical cases ===========================================
// colored mobile nav:
.pfy-nav-mobile-open .pfy-mobile-nav-colored {
  --nav-side-marker-hover-color: yellow;
  --nav-side-marker-active-color: orange;
  --nav-side-marker-curr-color: red;
}

// colored nav:
.pfy-nav-colored {
  --pfy-nav-elem-bg-color: hsl(#{$base-col1}, 90%);
  --pfy-nav-sub-bg-color: hsl(#{$base-col1}, 90%);
  --pfy-nav-surrogate-bg-color: hsl(#{$base-col1}, 90%);
  --pfy-nav-active-bg-color: hsl(#{$base-col2}, 85%);
  --pfy-nav-curr-bg-color: hsl(#{$base-col2}, 80%);

  --pfy-nav-hover-bg-color: hsl(#{$base-col2}, 30%);
  --pfy-nav-hover-txt-color: hsl(#{$base-col2}, 90%);
}

// top menu right-aligned:
.pfy-nav-top-right-aligned {
  &.pfy-nav-horizontal {
    display: flex;
    justify-content: flex-end;
  }
  &.pfy-nav-horizontal li.pfy-lvl-1:last-child > div {
    right: 0;
    left: unset !important;
    text-align: right;
  }
} // .pfy-nav-top-right-aligned
